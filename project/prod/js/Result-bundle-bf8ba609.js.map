{"version":3,"file":"js/Result-bundle-bf8ba609.js","mappings":"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","sources":["webpack://github-hot/./src/api/index.ts","webpack://github-hot/./src/components/Tab/Tab.tsx","webpack://github-hot/./src/components/IconText/IconText.tsx","webpack://github-hot/./src/util/index.ts","webpack://github-hot/./src/components/Card/Card.tsx","webpack://github-hot/./src/components/Loading/Loading.tsx","webpack://github-hot/./src/components/Header/Header.tsx","webpack://github-hot/./src/pages/Result/Result.tsx","webpack://github-hot/./src/pages/Result/index.ts"],"sourcesContent":["export const getGithubInfo = async (type: string, page: number) => {\n  try {\n    const res = await fetch(\n      `https://api.github.com/search/repositories?q=stars:%3E1${\n        type ? '+language:' + type : ''\n      }&sort=starts&order=desc&type=Repositories&page=${page}`,\n    );\n    return res.json();\n  } catch (err) {\n    alert(err);\n  }\n};\n\nexport const getUser = async (userId: string) => {\n  try {\n    const res = await fetch(`https://api.github.com/users/${userId}`);\n    return res.json();\n  } catch (err) {\n    alert(err);\n  }\n};\n","import React from 'react';\n\nimport './index.scss';\n\nexport interface TabProps {\n  list: string[];\n  onChange: (value: string) => void;\n  select?: string;\n}\n\nexport const Tab: React.FC<TabProps> = ({ list, select, onChange }) => {\n  const [current, setCurrent] = React.useState<string>(select || 'all');\n\n  const handleCurrentChange = (value: string) => {\n    onChange(value);\n    setCurrent(value);\n  };\n\n  return (\n    <ul className=\"tab\">\n      {list &&\n        list.map((item, index) => {\n          return (\n            <li\n              onClick={() => {\n                handleCurrentChange(item);\n              }}\n              className={current === item ? 'active' : ''}\n              key={`tab-list-${index}`}\n            >\n              {item}\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n","import React, { PropsWithChildren } from 'react';\n\nimport './index.scss';\n\nexport interface IconTextProps extends PropsWithChildren {\n  icon?: string;\n  color?: string;\n}\n\nexport const IconText: React.FC<IconTextProps> = ({ icon, color, children }) => {\n  return (\n    <span className=\"icon-text\">\n      <i className={`fa ${icon ? 'fa-' + icon : ''}`} style={{ color: color || '#000' }} />\n      {children}\n    </span>\n  );\n};\n","/**\n * 格式化成千分位\n * @param {number | string} num\n * */\nexport const formatNumber = (num: string | number) => {\n  const reg = /(?!^)(?=(\\d{3})+$)/g;\n  return String.prototype.replace.call(num, reg, ',');\n};\n","import React from 'react';\nimport { IconText } from '@components';\nimport { formatNumber } from '@util';\n\nimport './index.scss';\n\nexport interface CardProps {\n  rank: number | string;\n  avatar: string;\n  name: string;\n  user: string;\n  star: number | string;\n  fork: number | string;\n  issue: number | string;\n}\n\nexport const Card: React.FC<CardProps> = ({ rank, avatar, name, user, star, fork, issue }) => {\n  return (\n    <div className=\"card\">\n      <h3 className=\"card-rank\">#{rank}</h3>\n      <img alt=\"avatar\" src={avatar} />\n      <h4 className=\"card-name\">{name}</h4>\n      <IconText icon=\"user\" color=\"orange\">\n        {formatNumber(user)}\n      </IconText>\n      <IconText icon=\"star\" color=\"yellow\">\n        {formatNumber(star)} star\n      </IconText>\n      <IconText icon=\"code-fork\" color=\"blue\">\n        {formatNumber(fork)} fork\n      </IconText>\n      <IconText icon=\"exclamation-triangle\" color=\"red\">\n        {formatNumber(issue)} open Issue\n      </IconText>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './index.scss';\n\nexport const Loading: React.FC = () => {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"loader\" />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './index.scss';\n\nexport const Header: React.FC = () => {\n  return (\n    <header className=\"header\">\n      <nav>\n        <Link to=\"/\">Popular</Link>\n        <Link to=\"/battle\">Battle</Link>\n      </nav>\n    </header>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loading, Header, IconText } from '@components';\nimport { getUser } from '@api';\n\nimport './index.scss';\n\ninterface ResultCardProps {\n  winner: boolean;\n  avatar: string;\n  repos: number;\n  name: string;\n  location: string;\n  following: number;\n  follower: number;\n}\n\nconst ResultCard: React.FC<ResultCardProps> = ({ winner, avatar, repos, name, location, follower, following }) => {\n  return (\n    <div className=\"result-card\">\n      <h3>{winner ? 'Winner' : 'Loser'}</h3>\n      <img src={avatar} alt=\"avatar\" />\n      <h4>Scroes: {repos}</h4>\n      <h3>{name}</h3>\n      <div className=\"result-card-detail\">\n        <IconText icon=\"location-arrow\">{location}</IconText>\n        <IconText icon=\"users\">{follower}</IconText>\n        <IconText icon=\"user-plus\">{following}</IconText>\n        <IconText icon=\"code\">{repos}</IconText>\n      </div>\n    </div>\n  );\n};\n\ninterface GithubUserData {\n  public_repos: number;\n  avatar_url: string;\n  name: string;\n  location: string;\n  followers: number;\n  following: number;\n}\n\nexport const Result: React.FC = () => {\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [p1Data, setP1Data] = React.useState<GithubUserData>();\n  const [p2Data, setP2Data] = React.useState<GithubUserData>();\n\n  const [search] = useSearchParams();\n  const p1 = search.get('p1');\n  const p2 = search.get('p2');\n\n  const getPlayerInfo = async () => {\n    if (p1 && p2) {\n      setLoading(true);\n      const data1 = await getUser(p1);\n      const data2 = await getUser(p2);\n      setLoading(false);\n      setP1Data(data1);\n      setP2Data(data2);\n    }\n  };\n\n  React.useEffect(() => {\n    getPlayerInfo();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      {loading && <Loading />}\n      <div className=\"container\">\n        {p1Data && p2Data && (\n          <div className=\"result\">\n            <ResultCard\n              winner={p1Data.public_repos > p2Data.public_repos}\n              repos={p1Data.public_repos}\n              avatar={p1Data.avatar_url}\n              name={p1Data.name}\n              location={p1Data.location}\n              follower={p1Data.followers}\n              following={p1Data.following}\n            />\n            <ResultCard\n              winner={p2Data.public_repos > p1Data.public_repos}\n              repos={p2Data.public_repos}\n              avatar={p2Data.avatar_url}\n              name={p2Data.name}\n              location={p2Data.location}\n              follower={p2Data.followers}\n              following={p2Data.following}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","export * from './Result';\nimport { Result } from './Result';\n\nexport default Result;\n"],"names":["getGithubInfo","type","page","fetch","res","json","alert","getUser","userId","Tab","list","select","onChange","React","current","setCurrent","className","map","item","index","onClick","value","key","IconText","icon","color","children","style","formatNumber","num","String","prototype","replace","call","Card","rank","avatar","name","user","star","fork","issue","alt","src","Loading","Header","to","i","ResultCard","winner","repos","location","follower","following","Result","loading","setLoading","p1Data","setP1Data","p2Data","setP2Data","search","useSearchParams","p1","get","p2","getPlayerInfo","data1","data2","public_repos","avatar_url","followers"],"sourceRoot":""}
{"version":3,"file":"js/Battle-bundle-dc807914.js","mappings":"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","sources":["webpack://github-hot/./src/components/Tab/Tab.tsx","webpack://github-hot/./src/components/IconText/IconText.tsx","webpack://github-hot/./src/util/index.ts","webpack://github-hot/./src/components/Card/Card.tsx","webpack://github-hot/./src/components/Loading/Loading.tsx","webpack://github-hot/./src/components/Header/Header.tsx","webpack://github-hot/./src/pages/Battle/Battle.tsx","webpack://github-hot/./src/pages/Battle/index.ts"],"sourcesContent":["import React from 'react';\n\nimport './index.scss';\n\nexport interface TabProps {\n  list: string[];\n  onChange: (value: string) => void;\n  select?: string;\n}\n\nexport const Tab: React.FC<TabProps> = ({ list, select, onChange }) => {\n  const [current, setCurrent] = React.useState<string>(select || 'all');\n\n  const handleCurrentChange = (value: string) => {\n    onChange(value);\n    setCurrent(value);\n  };\n\n  return (\n    <ul className=\"tab\">\n      {list &&\n        list.map((item, index) => {\n          return (\n            <li\n              onClick={() => {\n                handleCurrentChange(item);\n              }}\n              className={current === item ? 'active' : ''}\n              key={`tab-list-${index}`}\n            >\n              {item}\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n","import React, { PropsWithChildren } from 'react';\n\nimport './index.scss';\n\nexport interface IconTextProps extends PropsWithChildren {\n  icon?: string;\n  color?: string;\n}\n\nexport const IconText: React.FC<IconTextProps> = ({ icon, color, children }) => {\n  return (\n    <span className=\"icon-text\">\n      <i className={`fa ${icon ? 'fa-' + icon : ''}`} style={{ color: color || '#000' }} />\n      {children}\n    </span>\n  );\n};\n","/**\n * 格式化成千分位\n * @param {number | string} num\n * */\nexport const formatNumber = (num: string | number) => {\n  const reg = /(?!^)(?=(\\d{3})+$)/g;\n  return String.prototype.replace.call(num, reg, ',');\n};\n","import React from 'react';\nimport { IconText } from '@components';\nimport { formatNumber } from '@util';\n\nimport './index.scss';\n\nexport interface CardProps {\n  rank: number | string;\n  avatar: string;\n  name: string;\n  user: string;\n  star: number | string;\n  fork: number | string;\n  issue: number | string;\n}\n\nexport const Card: React.FC<CardProps> = ({ rank, avatar, name, user, star, fork, issue }) => {\n  return (\n    <div className=\"card\">\n      <h3 className=\"card-rank\">#{rank}</h3>\n      <img alt=\"avatar\" src={avatar} />\n      <h4 className=\"card-name\">{name}</h4>\n      <IconText icon=\"user\" color=\"orange\">\n        {formatNumber(user)}\n      </IconText>\n      <IconText icon=\"star\" color=\"yellow\">\n        {formatNumber(star)} star\n      </IconText>\n      <IconText icon=\"code-fork\" color=\"blue\">\n        {formatNumber(fork)} fork\n      </IconText>\n      <IconText icon=\"exclamation-triangle\" color=\"red\">\n        {formatNumber(issue)} open Issue\n      </IconText>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './index.scss';\n\nexport const Loading: React.FC = () => {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"loader\" />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './index.scss';\n\nexport const Header: React.FC = () => {\n  return (\n    <header className=\"header\">\n      <nav>\n        <Link to=\"/\">Popular</Link>\n        <Link to=\"/battle\">Battle</Link>\n      </nav>\n    </header>\n  );\n};\n","import React, { ChangeEventHandler, KeyboardEventHandler } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Header } from '@components';\nimport './index.scss';\n\ninterface InstructionCardProps {\n  text: string;\n  icon: string;\n  color: string;\n}\n\nconst InstructionCard: React.FC<InstructionCardProps> = ({ text, icon, color }) => {\n  return (\n    <div className=\"instruction-card\">\n      <h4>{text}</h4>\n      <div>\n        <i className={icon ? `fa fa-${icon}` : ''} style={{ color: color ? color : '#000' }}></i>\n      </div>\n    </div>\n  );\n};\n\ninterface PlayerInputProps {\n  title: string;\n  onChange: (userId: string) => void;\n  help?: string;\n}\n\nconst PlayerInput: React.FC<PlayerInputProps> = ({ title, onChange }) => {\n  const [value, setValue] = React.useState<string>('');\n  const [show, setShow] = React.useState<boolean>(false);\n  const submit = () => {\n    setShow(true);\n    onChange(value);\n  };\n\n  const handleInputChange: ChangeEventHandler<HTMLInputElement> = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleCancel = () => {\n    setShow(false);\n    setValue('');\n    onChange('');\n  };\n\n  const handleKeyDown: KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.key === 'Enter') {\n      submit();\n    }\n  };\n\n  return (\n    <div className=\"playinput\">\n      <h4>{title}</h4>\n      {!show ? (\n        <div>\n          <input value={value} onChange={handleInputChange} placeholder=\"Github User Id\" onKeyDown={handleKeyDown} />\n          <button onClick={submit} disabled={!value}>\n            submit\n          </button>\n        </div>\n      ) : (\n        <div className=\"playinput-show\">\n          <img src={`https://github.com/${value}.png?size=200`} alt=\"avatar\" />\n          <span>{value}</span>\n          <button onClick={handleCancel}>Cancel</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport const Battle: React.FC = () => {\n  const [playOne, setPlayOne] = React.useState<string>('');\n  const [playTwo, setPlayTwo] = React.useState<string>('');\n\n  const navigate = useNavigate();\n  const goBattle = () => {\n    navigate('/result' + `?p1=${playOne}&p2=${playTwo}`);\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <h3>Instructions</h3>\n        <div className=\"instruction\">\n          <InstructionCard text=\"Enter two Github\" icon=\"users\" color=\"red\" />\n          <InstructionCard text=\"Battle\" icon=\"exchange\" color=\"green\" />\n          <InstructionCard text=\"See the winner\" icon=\"trophy\" color=\"orange\" />\n        </div>\n        <div className=\"center\">\n          <PlayerInput title=\"Player One\" onChange={setPlayOne} />\n          <PlayerInput title=\"Player Two\" onChange={setPlayTwo} />\n        </div>\n\n        {playOne && playTwo && (\n          <div className=\"center\">\n            <button onClick={goBattle}>Battle</button>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","export * from './Battle';\nimport { Battle } from './Battle';\nexport default Battle;\n"],"names":["Tab","list","select","onChange","React","current","setCurrent","className","map","item","index","onClick","value","key","IconText","icon","color","children","style","formatNumber","num","String","prototype","replace","call","Card","rank","avatar","name","user","star","fork","issue","alt","src","Loading","Header","to","InstructionCard","text","PlayerInput","title","setValue","show","setShow","submit","e","target","placeholder","onKeyDown","disabled","Battle","playOne","setPlayOne","playTwo","setPlayTwo","navigate","useNavigate"],"sourceRoot":""}